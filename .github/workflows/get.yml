name: get
on:
  push:
  schedule:
    - cron: "0,30 * * * *"

jobs:
  run:
    name: get
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: deps
        run: |
          sudo apt update && sudo apt install -y curl sqlite3

      - name: fetch
        run: |
          curl "https://xml.e-hentai.org/ehg.xml" -o raw

      - name: process
        run: |
          cat raw | grep -P -o "https?://e[-x]hentai.org/g/(\d+)/(\w+)/" | cut -d "/" -f 5,6 | sort -n | uniq | tee data
          printf "INSERT OR IGNORE INTO gallery values" >> insert.sql
          cat data | sed -E 's/(.*)\/(.*)/(\1,"\2"),/' >> insert.sql
          tail -n 1 data | sed -E 's/(.*)\/(.*)/(\1,"\2");/' >> insert.sql

      - name: insert
        run: |
          before=`sqlite3 db.sqlite3 < count.sql`
          sqlite3 db.sqlite3 < insert.sql
          after=`sqlite3 db.sqlite3 < count.sql`
          messages="update $((after-before)) at `date`"

      - name: dump
          echo "messages=$messages" >> $GITHUB_ENV
          diff -N data.txt data
          mv data data.txt
          sqlite3 db.sqlite3 .dump > dump.sql

      - name: dump sql
        uses: actions/upload-artifact@v2
        with:
          name: dump.sql
          path: dump.sql

      - name: dump db
        uses: actions/upload-artifact@v2
        with:
          name: db.sqlite3
          path: db.sqlite3

      - name: tag
        run: |
          echo "tag=v`date '+%Y.%m.%d'`" >> $GITHUB_ENV

      - name: commit
        uses: EndBug/add-and-commit@v7
        with:
          message: "${{ env.messages }}"
          add: '["data.txt", "db.sqlite3"]'
          tag: "${{ env.release_tag }} --force"
